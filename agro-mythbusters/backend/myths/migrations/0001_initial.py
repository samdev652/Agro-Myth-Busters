# Generated by Django 4.2.7 on 2025-10-31 20:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='icon')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Myth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('slug', models.SlugField(max_length=300, unique=True, verbose_name='slug')),
                ('description', models.TextField(verbose_name='description')),
                ('origin', models.CharField(blank=True, max_length=255, verbose_name='origin')),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('under_review', 'Under Review'), ('verified', 'Verified'), ('debunked', 'Debunked'), ('inconclusive', 'Inconclusive')], default='pending', max_length=20, verbose_name='status')),
                ('is_featured', models.BooleanField(default=False, verbose_name='is featured')),
                ('total_votes', models.IntegerField(default=0, verbose_name='total votes')),
                ('upvotes', models.IntegerField(default=0, verbose_name='upvotes')),
                ('downvotes', models.IntegerField(default=0, verbose_name='downvotes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='myths', to='myths.category', verbose_name='category')),
                ('submitted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='submitted_myths', to=settings.AUTH_USER_MODEL, verbose_name='submitted by')),
            ],
            options={
                'verbose_name': 'myth',
                'verbose_name_plural': 'myths',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ResearchRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('rejected', 'Rejected')], default='open', max_length=20, verbose_name='status')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('findings', models.TextField(blank=True, verbose_name='findings')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='completed at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_research', to=settings.AUTH_USER_MODEL, verbose_name='assigned to')),
                ('myth', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='research_requests', to='myths.myth', verbose_name='myth')),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='research_requests', to=settings.AUTH_USER_MODEL, verbose_name='requested by')),
            ],
            options={
                'verbose_name': 'research request',
                'verbose_name_plural': 'research requests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('myth_update', 'Myth Update'), ('new_comment', 'New Comment'), ('evidence_added', 'New Evidence'), ('research_update', 'Research Update'), ('status_change', 'Status Change')], max_length=20, verbose_name='notification type')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('message', models.TextField(verbose_name='message')),
                ('is_read', models.BooleanField(default=False, verbose_name='is read')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('related_myth', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='myths.myth', verbose_name='related myth')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'notification',
                'verbose_name_plural': 'notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Evidence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('description', models.TextField(verbose_name='description')),
                ('evidence_type', models.CharField(choices=[('scientific_study', 'Scientific Study'), ('expert_opinion', 'Expert Opinion'), ('field_trial', 'Field Trial'), ('traditional_knowledge', 'Traditional Knowledge'), ('other', 'Other')], default='other', max_length=30, verbose_name='evidence type')),
                ('source_url', models.URLField(blank=True, verbose_name='source URL')),
                ('source_citation', models.CharField(blank=True, max_length=500, verbose_name='source citation')),
                ('is_approved', models.BooleanField(default=False, verbose_name='is approved')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('myth', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evidences', to='myths.myth', verbose_name='myth')),
                ('submitted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='submitted_evidences', to=settings.AUTH_USER_MODEL, verbose_name='submitted by')),
            ],
            options={
                'verbose_name': 'evidence',
                'verbose_name_plural': 'evidences',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='content')),
                ('is_approved', models.BooleanField(default=True, verbose_name='is approved')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('myth', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='myths.myth', verbose_name='myth')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'comment',
                'verbose_name_plural': 'comments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote_type', models.CharField(choices=[('upvote', 'Upvote'), ('downvote', 'Downvote')], max_length=10, verbose_name='vote type')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('myth', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='myths.myth', verbose_name='myth')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'vote',
                'verbose_name_plural': 'votes',
                'ordering': ['-created_at'],
                'unique_together': {('myth', 'user')},
            },
        ),
        migrations.AddIndex(
            model_name='myth',
            index=models.Index(fields=['status', 'created_at'], name='myths_myth_status_3254e3_idx'),
        ),
        migrations.AddIndex(
            model_name='myth',
            index=models.Index(fields=['category', 'status'], name='myths_myth_categor_3d38c4_idx'),
        ),
    ]
